[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 109 products, 38 sources, 4 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/examples/Router.scala, ${BASE}/src/main/scala/Muxes.scala, ${BASE}/src/main/scala/Logical.scala, ${BASE}/src/main/scala/examples/Tbl.scala, ${BASE}/src/main/scala/examples/SimpleALU.scala, ${BASE}/src/main/scala/examples/Stack.scala, ${BASE}/src/main/scala/examples/ShiftRegister.scala, ${BASE}/src/main/scala/examples/FullAdder.scala, ${BASE}/src/main/scala/examples/ByteSelector.scala, ${BASE}/src/main/scala/CompareMux.scala, ${BASE}/src/main/scala/examples/Darken.scala, ${BASE}/src/main/scala/Memory.scala, ${BASE}/src/main/scala/Arithmetics.scala, ${BASE}/src/main/scala/examples/Parity.scala, ${BASE}/src/main/scala/StdLib.scala, ${BASE}/src/main/scala/examples/Functionality.scala, ${BASE}/src/main/scala/RandomHardware.scala, ${BASE}/src/main/scala/examples/Adder4.scala, ${BASE}/src/main/scala/examples/EnableShiftRegister.scala, ${BASE}/src/main/scala/examples/Life.scala, ${BASE}/src/main/scala/examples/Risc.scala, ${BASE}/src/main/scala/examples/Adder.scala, ${BASE}/src/main/scala/examples/VecSearch.scala, ${BASE}/src/main/scala/examples/Combinational.scala, ${BASE}/src/main/scala/examples/LogShifter.scala, ${BASE}/src/main/scala/ReduceMux.scala, ${BASE}/src/main/scala/examples/GCD.scala, ${BASE}/src/main/scala/Registers.scala, ${BASE}/src/main/scala/RegFile2R1W.scala, ${BASE}/src/main/scala/examples/HiLoMultiplier.scala, ${BASE}/src/main/scala/examples/ResetShiftRegister.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(${BASE}/src/main/scala/RandomHardware_1_2.scala, ${BASE}/src/main/scala/RandomHardware_2_1.scala, ${BASE}/src/main/scala/RandomHardware_1_4.scala, ${BASE}/src/main/scala/RandomHardware_1_0.scala, ${BASE}/src/main/scala/RandomHardware_1_6.scala, ${BASE}/src/main/scala/RandomHardware_1_1.scala, ${BASE}/src/main/scala/RandomHardware_1_5.scala), changed = Set(${BASE}/src/main/scala/RandomHardware.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/main/scala/RandomHardware_2_1.scala, ${BASE}/src/main/scala/RandomHardware_1_6.scala, ${BASE}/src/main/scala/RandomHardware_1_1.scala, ${BASE}/src/main/scala/RandomHardware_1_5.scala, ${BASE}/src/main/scala/RandomHardware_1_0.scala, ${BASE}/src/main/scala/RandomHardware_1_2.scala, ${BASE}/src/main/scala/RandomHardware_1_4.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/RandomHardware.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(randomhardware.RandomHardware_1_6, randomhardware.RandomHardware_1_0, randomhardware.RandomHardware, randomhardware.RandomHardware_2_1, randomhardware.RandomHardware_1_1, randomhardware.RandomHardware_1_4, randomhardware.RandomHardware_1_2, randomhardware.RandomHardware_1_5, randomhardware.RandomHardwareDriver)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(randomhardware.RandomHardware_1_6, randomhardware.RandomHardware_1_0, randomhardware.RandomHardware, randomhardware.RandomHardware_2_1, randomhardware.RandomHardware_1_1, randomhardware.RandomHardware_1_4, randomhardware.RandomHardware_1_2, randomhardware.RandomHardware_1_5, randomhardware.RandomHardwareDriver)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/RandomHardware.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: randomhardware.RandomHardware_1_6, randomhardware.RandomHardware_1_0, randomhardware.RandomHardware, randomhardware.RandomHardware_2_1, randomhardware.RandomHardware_1_1, randomhardware.RandomHardware_1_4, randomhardware.RandomHardware_1_2, randomhardware.RandomHardware_1_5, randomhardware.RandomHardwareDriver[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /home/ubuntu/randomaccels/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.4.4:compile for Scala 2.12.13[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 2e97df72 for Scala compiler version 2.12.13[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xsource:2.11[0m
[0m[[0m[0mdebug[0m] [0m[0m	-language:reflectiveCalls[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xcheckinit[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:chiselplugin:useBundlePlugin[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-plugin_2.12.13/3.4.3/chisel3-plugin_2.12.13-3.4.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalamacros/paradise_2.12.13/2.1.1/paradise_2.12.13-2.1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.13/scala-library-2.12.13.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/ubuntu/randomaccels/target/scala-2.12/classes:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3_2.12/3.4.3/chisel3_2.12-3.4.3.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-macros_2.12/3.4.3/chisel3-macros_2.12-3.4.3.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-core_2.12/3.4.3/chisel3-core_2.12-3.4.3.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.12.13/scala-reflect-2.12.13.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/scopt/scopt_2.12/3.7.1/scopt_2.12-3.7.1.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/firrtl_2.12/1.4.3/firrtl_2.12-1.4.3.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/antlr/antlr4-runtime/4.7.1/antlr4-runtime-4.7.1.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/protobuf/protobuf-java/3.9.0/protobuf-java-3.9.0.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/net/jcazevedo/moultingyaml_2.12/0.4.2/moultingyaml_2.12-0.4.2.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native_2.12/3.6.9/json4s-native_2.12-3.6.9.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-text/1.8/commons-text-1.8.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/nscala-time/nscala-time_2.12/2.22.0/nscala-time_2.12-2.22.0.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_2.12/3.6.9/json4s-core_2.12-3.6.9.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/joda-time/joda-time/2.10.1/joda-time-2.10.1.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/joda/joda-convert/2.2.0/joda-convert-2.2.0.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_2.12/3.6.9/json4s-ast_2.12-3.6.9.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_2.12/3.6.9/json4s-scalap_2.12-3.6.9.jar:/home/ubuntu/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from randomhardware.RandomHardware_1_4...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: randomhardware.RandomHardware_1_4[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(randomhardware.RandomHardware_1_4)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(randomhardware.RandomHardware_1_4,ModifiedNames(changes = UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(randomhardware;RandomHardware_1_4;init;,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(Mul_001,[Default]), UsedName(RandomHardware_1_4,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(wire_000,[Default]), UsedName(namePorts,[Default]), UsedName(wire_001,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(Reg_002,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(Reg_000,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]))) invalidates 1 classes due to The randomhardware.RandomHardware_1_4 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(randomhardware;RandomHardware_1_4;init;,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(Mul_001,[Default]), UsedName(RandomHardware_1_4,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(wire_000,[Default]), UsedName(namePorts,[Default]), UsedName(wire_001,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(Reg_002,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(Reg_000,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(randomhardware.RandomHardware_1_4)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from randomhardware.RandomHardware...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: randomhardware.RandomHardware[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(randomhardware.RandomHardware)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(randomhardware.RandomHardware,ModifiedNames(changes = UsedName(Accum_002,[Default]), UsedName(wire_006,[Default]), UsedName(RandomHardware_001,[Default]), UsedName(RegFile2R1W_006,[Default]), UsedName(Mux2_001,[Default]), UsedName(Add_004,[Default]), UsedName(Mul_005,[Default]), UsedName(RandomHardware_006,[Default]), UsedName(RandomHardware_002,[Default]), UsedName(Div_000,[Default]), UsedName(RandomHardware_004,[Default]), UsedName(Add_007,[Default]), UsedName(RandomHardware_000,[Default]), UsedName(RandomHardware_005,[Default]))) invalidates 1 classes due to The randomhardware.RandomHardware has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Accum_002,[Default]), UsedName(wire_006,[Default]), UsedName(RandomHardware_001,[Default]), UsedName(RegFile2R1W_006,[Default]), UsedName(Mux2_001,[Default]), UsedName(Add_004,[Default]), UsedName(Mul_005,[Default]), UsedName(RandomHardware_006,[Default]), UsedName(RandomHardware_002,[Default]), UsedName(Div_000,[Default]), UsedName(RandomHardware_004,[Default]), UsedName(Add_007,[Default]), UsedName(RandomHardware_000,[Default]), UsedName(RandomHardware_005,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(randomhardware.RandomHardware)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from randomhardware.RandomHardware_1_5...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: randomhardware.RandomHardware_1_5[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(randomhardware.RandomHardware_1_5)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(randomhardware.RandomHardware_1_5,ModifiedNames(changes = UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(randomhardware;RandomHardware_1_5;init;,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(Mod_000,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(wire_000,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(RandomHardware_001,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(RandomHardware_1_5,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]))) invalidates 1 classes due to The randomhardware.RandomHardware_1_5 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(randomhardware;RandomHardware_1_5;init;,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(Mod_000,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(wire_000,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(RandomHardware_001,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(RandomHardware_1_5,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(randomhardware.RandomHardware_1_5)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from randomhardware.RandomHardware_1_6...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: randomhardware.RandomHardware_1_6[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(randomhardware.RandomHardware_1_6)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(randomhardware.RandomHardware_1_6,ModifiedNames(changes = UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(randomhardware;RandomHardware_1_6;init;,[Default]), UsedName(notify,[Default]), UsedName(RandomHardware_1_6,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(RegFile2R1W_000,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]))) invalidates 1 classes due to The randomhardware.RandomHardware_1_6 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(randomhardware;RandomHardware_1_6;init;,[Default]), UsedName(notify,[Default]), UsedName(RandomHardware_1_6,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(RegFile2R1W_000,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(randomhardware.RandomHardware_1_6)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from randomhardware.RandomHardware_2_1...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: randomhardware.RandomHardware_2_1[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(randomhardware.RandomHardware_2_1)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(randomhardware.RandomHardware_2_1,ModifiedNames(changes = UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(RandomHardware_2_1,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(randomhardware;RandomHardware_2_1;init;,[Default]), UsedName(RegFile2R1W_000,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]))) invalidates 1 classes due to The randomhardware.RandomHardware_2_1 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(RandomHardware_2_1,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(randomhardware;RandomHardware_2_1;init;,[Default]), UsedName(RegFile2R1W_000,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(randomhardware.RandomHardware_2_1)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from randomhardware.RandomHardware_1_0...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: randomhardware.RandomHardware_1_0[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(randomhardware.RandomHardware_1_0)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(randomhardware.RandomHardware_1_0,ModifiedNames(changes = UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(RandomHardware_1_0,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(Add_000,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(randomhardware;RandomHardware_1_0;init;,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]))) invalidates 1 classes due to The randomhardware.RandomHardware_1_0 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(RandomHardware_1_0,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(Add_000,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(randomhardware;RandomHardware_1_0;init;,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(randomhardware.RandomHardware_1_0)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from randomhardware.RandomHardware_1_2...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: randomhardware.RandomHardware_1_2[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(randomhardware.RandomHardware_1_2)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(randomhardware.RandomHardware_1_2,ModifiedNames(changes = UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(Div_002,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(Mul_000,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(wire_000,[Default]), UsedName(namePorts,[Default]), UsedName(wire_001,[Default]), UsedName($init$,[Default]), UsedName(RandomHardware_001,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(RandomHardware_1_2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(randomhardware;RandomHardware_1_2;init;,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]))) invalidates 1 classes due to The randomhardware.RandomHardware_1_2 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(Div_002,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(Mul_000,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(wire_000,[Default]), UsedName(namePorts,[Default]), UsedName(wire_001,[Default]), UsedName($init$,[Default]), UsedName(RandomHardware_001,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(RandomHardware_1_2,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(randomhardware;RandomHardware_1_2;init;,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(randomhardware.RandomHardware_1_2)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from randomhardware.RandomHardware_1_1...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: randomhardware.RandomHardware_1_1[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(randomhardware.RandomHardware_1_1)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(randomhardware.RandomHardware_1_1,ModifiedNames(changes = UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(RandomHardware_1_1,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(randomhardware;RandomHardware_1_1;init;,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(RegFile2R1W_000,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]))) invalidates 1 classes due to The randomhardware.RandomHardware_1_1 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(addAutoPostnameHook,[Default]), UsedName(forceName,[Default]), UsedName(override_clock,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(portsSize,[Default]), UsedName(##,[Default]), UsedName(toTarget,[Default]), UsedName(nameIds,[Default]), UsedName(suggestName,[Default]), UsedName(hashCode,[Default]), UsedName(seedOpt,[Default]), UsedName(equals,[Default]), UsedName(io,[Default]), UsedName(getPublicFields,[Default]), UsedName(IO,[Default]), UsedName(compileOptions,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(==,[Default]), UsedName(_io,[Default]), UsedName(addId,[Default]), UsedName(portsContains,[Default]), UsedName(wait,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(toString,[Default]), UsedName(_namespace,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(_component,[Default]), UsedName(RandomHardware_1_1,[Default]), UsedName(namePorts,[Default]), UsedName($init$,[Default]), UsedName(parentPathName,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(mkReset,[Default]), UsedName(generateComponent,[Default]), UsedName(isClosed,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(_id,[Default]), UsedName(clone,[Default]), UsedName(clock,[Default]), UsedName(notify,[Default]), UsedName(toNamed,[Default]), UsedName(pathName,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getIds,[Default]), UsedName(hasSeed,[Default]), UsedName(in,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(randomhardware;RandomHardware_1_1;init;,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(eq,[Default]), UsedName(override_reset,[Default]), UsedName(getModulePorts,[Default]), UsedName(getChiselPorts,[Default]), UsedName(notifyAll,[Default]), UsedName(_parent,[Default]), UsedName(instanceName,[Default]), UsedName(getOptionRef,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(circuitName,[Default]), UsedName(getPorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(autoSeed,[Default]), UsedName(getCommands,[Default]), UsedName(finalize,[Default]), UsedName(out,[Default]), UsedName(reset,[Default]), UsedName(addCommand,[Default]), UsedName(_closed,[Default]), UsedName(parentModName,[Default]), UsedName(getRef,[Default]), UsedName(RegFile2R1W_000,[Default]), UsedName(desiredName,[Default]), UsedName(computeName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(randomhardware.RandomHardware_1_1)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 4.559603439 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
